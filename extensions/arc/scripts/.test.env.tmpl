# Used by docker_pull.sh
#
export SOURCE_DOCKER_REGISTRY=${SOURCE_DOCKER_REGISTRY}
export SOURCE_DOCKER_REPOSITORY=${SOURCE_DOCKER_REPOSITORY}
export SOURCE_DOCKER_TAG=${SOURCE_DOCKER_TAG}
export SOURCE_DOCKER_USERNAME=${SOURCE_DOCKER_USERNAME}
export SOURCE_DOCKER_PASSWORD=${SOURCE_DOCKER_PASSWORD}
export DOCKER_USERNAME=${SOURCE_DOCKER_USERNAME}
export DOCKER_PASSWORD=${SOURCE_DOCKER_PASSWORD}
export AZDATA_PASSWORD=${AZDATA_PASSWORD}

# Used by data controller & tests
export SUBSCRIPTION_ID=${SUBSCRIPTION_ID}
export RESOURCE_GROUP_NAME=${RESOURCE_GROUP_NAME}
export LOCATION=${LOCATION}
export TEST_DATA_CONTROLLER_NAME=${TEST_DATA_CONTROLLER_NAME}
export CLUSTER_NAME=${CLUSTER_NAME}
export CONNECTIVITY_MODE=${CONNECTIVITY_MODE}
export SPN_CLIENT_SECRET=${SPN_CLIENT_SECRET}
export WORKSPACE_ID=${WORKSPACE_ID}
export WORKSPACE_SHARED_KEY=${WORKSPACE_SHARED_KEY}
export SPN_AUTHORITY=${SPN_AUTHORITY}
export SPN_CLIENT_ID=${SPN_CLIENT_ID}
export SPN_TENANT_ID=${SPN_TENANT_ID}

# k8s flavor
#
export KUBERNETES_ENVIRONMENT=${KUBERNETES_ENVIRONMENT}

# Run multiple TINA deployment and each deployment run multiple test containers
# Each test can be repeated multiple times in each test container
#
export TEST_DEPLOYMENT_COUNT=${TEST_DEPLOYMENT_COUNT}
export TEST_CONTAINER_COUNT_PER_DEPLOYMENT=${TEST_CONTAINER_COUNT_PER_DEPLOYMENT}
export TEST_REPEAT_COUNT=${TEST_REPEAT_COUNT}
export TEST_OSS_DEGREE_OF_PARALLELISM=${TEST_OSS_DEGREE_OF_PARALLELISM}

# Test type can be: stress, longhaul
#
export TEST_TYPE=${TEST_TYPE}
export PV_COUNT=${PV_COUNT}

# Set default image pull policy to *Always* as we'd like to start from clean
# for tests with multiple iterations, consider to change this variable to
# *IfNotPresent* only after the first iteration completes
#
export DOCKER_IMAGE_POLICY=Always
export AZDATA_USERNAME="controlleradmin"
export ACCEPT_EULA=yes

# Make sure apt doesn't prompt
export DEBIAN_FRONTEND=noninteractive

# Specify cluster information in Azure (AKS or ARO)
#
export AZURE_CLUSTER_SUBSCRIPTION=${AZURE_CLUSTER_SUBSCRIPTION}
export AZURE_CLUSTER_RESOURCEGROUP=${AZURE_CLUSTER_RESOURCEGROUP}
export AZURE_CLUSTER_NAME=${AZURE_CLUSTER_NAME}

# Service Principal to access the above cluster
#
export ARC_TEST_SP_NAME=${ARC_TEST_SP_NAME}
export ARC_TEST_SP_PASSWORD=${ARC_TEST_SP_PASSWORD}
export ARC_TEST_SP_TENANT=${ARC_TEST_SP_TENANT}

# Requests and limits for cores and memory for the test container
#
export TEST_CONTAINER_MEMORY_REQUEST=${TEST_CONTAINER_MEMORY_REQUEST}
export TEST_CONTAINER_CPU_REQUEST=${TEST_CONTAINER_CPU_REQUEST}
export TEST_CONTAINER_MEMORY_LIMIT=${TEST_CONTAINER_MEMORY_LIMIT}
export TEST_CONTAINER_CPU_LIMIT=${TEST_CONTAINER_CPU_LIMIT}